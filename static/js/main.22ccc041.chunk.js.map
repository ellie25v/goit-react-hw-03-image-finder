{"version":3,"sources":["components/searchbar/Searchbar.js","components/modal/Modal.js","components/loader/Loader.js","components/imageGallery/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/button/Button.js","components/App.js","index.js"],"names":["Searchbar","handleOnSubmit","handleChange","searchQuery","className","onSubmit","type","onChange","autoComplete","autoFocus","placeholder","value","Modal","escapeHandler","event","keyCode","props","closeModalinModal","handleOverlayClick","currentTarget","target","window","addEventListener","this","removeEventListener","largeImageUrl","onClick","src","alt","Component","LoaderPage","color","height","width","timeout","ImageGalleryItem","item","handleClick","data-image","largeImageURL","webformatURL","ImageGallery","galleryItems","map","key","id","Button","buttonMore","KEY","App","state","isLoading","error","page","openModal","handleSubmit","e","setState","axios","get","then","data","prevState","hits","finally","a","preventDefault","val","imageUrl","parentElement","querySelector","dataset","image","scrollTo","top","document","documentElement","scrollHeight","behavior","Loader","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.22ccc041.chunk.js","sourcesContent":["import React from 'react'\n\nconst Searchbar = ({handleOnSubmit, handleChange, searchQuery}) => (\n    \n        <header className=\"Searchbar\">\n<form className=\"SearchForm\" onSubmit={handleOnSubmit}>\n<button type=\"submit\" className=\"SearchForm-button\">\n  <span className=\"SearchForm-button-label\">Search</span>\n</button>\n\n<input onChange={handleChange}\n  className=\"SearchForm-input\"\n  type=\"text\"\n  autoComplete=\"off\"\n  autoFocus\n  placeholder=\"Search images and photos\"\n  value={searchQuery}\n/>\n</form>\n    </header>\n);\n\nexport default Searchbar;","import React, { Component } from \"react\";\n\nclass Modal extends Component {\n    escapeHandler = event => {\n        if (event.keyCode === 27) {\n            this.props.closeModalinModal(event);\n        }\n    };\n\n    handleOverlayClick = event => {\n        if (event.currentTarget === event.target) {\n            this.props.closeModalinModal(event);\n        }\n    };\n\n    componentDidMount() {\n        window.addEventListener(\"keydown\", this.escapeHandler);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"keydown\", this.escapeHandler);\n    }\n\n    render() {\n        const { largeImageUrl } = this.props;\n\n        return (\n            <div className='Modal'>\n                <div className='Overlay' onClick={this.handleOverlayClick}>\n                    <img\n                        src={largeImageUrl}\n                        alt=\"other\"\n                        className='modalImage'>\n                    </img>\n                    {/* <button\n                        type=\"button\"\n                        className='closeButton'\n                        data-action=\"close-lightbox\"\n                        onClick={closeModalinModal}\n                    >\n                        <i className=\"material-icons\">close</i>\n                    </button> */}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Modal;","import React from 'react'\nimport Loader from 'react-loader-spinner'\n\nconst LoaderPage = () => (\n    <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={100} width={100} timeout={3000}/>\n);\n\nexport default LoaderPage;","import React from 'react'\n\nconst ImageGalleryItem = ({item, handleClick}) => (\n    <li className=\"ImageGalleryItem\" >\n  <img data-image={item.largeImageURL} src={item.webformatURL} alt=\"a\" className=\"ImageGalleryItem-image\" onClick={handleClick}/>\n</li>\n);\n\nexport default ImageGalleryItem;","import React from 'react'\nimport ImageGalleryItem from './imageGalleryItem/ImageGalleryItem'\n\nconst ImageGallery = ({galleryItems, handleClick}) => (\n    <ul className=\"ImageGallery\">\n        {galleryItems.map(item => (<ImageGalleryItem key={item.id} item={item} handleClick={handleClick}/>))}\n    </ul>\n    \n);\n\nexport default ImageGallery;","import React from 'react'\n\nconst Button = ({buttonMore}) => (\n    <button type=\"button\" onClick={buttonMore} className=\"Button\">Load more</button>\n);\n\nexport default Button;","import React, {Component} from 'react';\nimport Searchbar from './searchbar/Searchbar'\nimport Modal from './modal/Modal'\nimport LoaderPage from './loader/Loader'\nimport ImageGallery from './imageGallery/ImageGallery'\nimport Button from './button/Button'\nimport axios from 'axios';\nimport './App.css';\nconst KEY = '15313999-a5df735b9fa1cf713cf16d2ec'\n\nclass App extends Component {\n  state = { \n    galleryItems: [],\n    isLoading: true, \n    error: null,\n    searchQuery: \"\",\n    page: 1,\n    largeImageUrl: \"\",\n    openModal: false\n   }\n\n  handleSubmit = (e) => {\n    // e.preventDefault();\n    const {searchQuery, page} = this.state\n    this.setState({isLoading: true})\n    axios.get(`https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\n    .then((data) => this.setState(prevState => ({galleryItems: [...prevState.galleryItems, ...data.data.hits]}))).finally(() => this.setState({isLoading:false}))\n  }\n  componentDidMount() {\n    this.handleSubmit()\n  }\n  handleOnSubmit = async (e) =>{\n    e.preventDefault()\n    await this.setState({galleryItems : []})\n    await this.handleSubmit()\n  }\n  handleChange = (e) =>{\n    const val = e.target.value\n    this.setState({searchQuery: val})\n  }\n  buttonMore = async () =>{\n    await this.setState(prevState => ({page: prevState.page+1}))\n    await this.handleSubmit()\n  }\n  componentDidUpdate() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n  handleClick = e => {\n    const imageUrl = e.currentTarget.parentElement.querySelector('img').dataset\n      .image;\n\n    this.setState({\n      openModal: !this.state.openModal,\n      largeImageUrl: imageUrl,\n    });\n  };\n  \n  closeModalinModal = () => {\n    this.setState({\n      openModal: !this.state.openModal,\n    });\n  };\n\n  render() {\n    const {isLoading, galleryItems, searchQuery} = this.state;\n    return (\n      <div className='App'>\n        <Searchbar handleOnSubmit={this.handleOnSubmit} handleChange={this.handleChange} searchQuery={searchQuery}/>\n        {isLoading && <LoaderPage /> }\n        <ImageGallery galleryItems={galleryItems}  handleClick={this.handleClick}/>\n        <Button buttonMore={this.buttonMore}/>\n        {this.state.openModal &&\n        \n          <Modal\n            closeModalinModal={this.closeModalinModal}\n            largeImageUrl={this.state.largeImageUrl}\n          />\n        }\n      \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}